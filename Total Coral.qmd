



```{r}
library(tidyverse)
library(readr)
library(stringr)

# --- Base folder that holds all the subfolders you listed ---
data_dir <- "C:/Users/brody/Desktop/Brody Thesis Project/Matches Data (NO GEN)"

# 1) Find ALL match CSVs recursively (no need to hand-type them)
files <- list.files(
  data_dir,
  pattern = "_Matches_.*\\.csv$",
  full.names = TRUE,
  recursive = TRUE
)

stopifnot(length(files) > 0)

# 2) Helpers to parse Block/Treatment and Years from filename
#    (Works for 1x1, 2x2, Con, TopOnly, etc.; years pulled from the last two 4-digit tokens)
parse_block_treatment <- function(fname) {
  m <- str_match(fname, "^([A-Za-z]\\d+)_([^_]+)_Matches_")
  if (is.na(m[1,1])) stop("Unexpected filename format (Block/Treatment): ", fname)
  list(block = m[1,2], treatment = m[1,3])
}

parse_years <- function(fname) {
  yrs <- str_extract_all(fname, "(?<!\\d)(20\\d{2})(?!\\d)")[[1]]
  if (length(yrs) < 2) stop("Could not find two years in filename: ", fname)
  as.integer(tail(yrs, 2))
}

# 3) Your same reader, generalized
read_match_file <- function(fp) {
  fname <- basename(fp)
  bt <- parse_block_treatment(fname)
  yrs <- parse_years(fname)
  year_1 <- yrs[1]
  year_2 <- yrs[2]

  df <- read_csv(fp, show_col_types = FALSE)

  # Expect columns like your working example
  need <- c("Genet","Area1","Area2","Class")
  miss <- setdiff(need, names(df))
  if (length(miss)) stop("Missing columns in ", fname, ": ", paste(miss, collapse=", "))

  earlier <- df %>%
    transmute(
      Year = year_1,
      Block = bt$block,
      Treatment = bt$treatment,
      `Coral ID` = Genet,
      `Coral Species` = trimws(as.character(Class)),
      Size = suppressWarnings(as.numeric(Area1))
    )

  later <- df %>%
    transmute(
      Year = year_2,
      Block = bt$block,
      Treatment = bt$treatment,
      `Coral ID` = Genet,
      `Coral Species` = trimws(as.character(Class)),
      Size = suppressWarnings(as.numeric(Area2))
    )

  bind_rows(earlier, later)
}

# 4) Read and combine everything (same downstream logic as your snippet)
long_all <- files %>%
  map(read_match_file) %>%
  list_rbind() %>%
  mutate(
    `Coral Species` = na_if(`Coral Species`, ""),
    Size = replace_na(Size, 0)
  )

final_table <- long_all %>%
  group_by(Block, Treatment, `Coral ID`) %>%
  mutate(`Year Discovered` = ifelse(any(Size > 0), min(Year[Size > 0]), NA_integer_)) %>%
  ungroup() %>%
  mutate(`Coral Present (Yes or No)` = if_else(Size > 0, "Yes", "No")) %>%
  select(
    Year, Block, Treatment,
    `Coral ID`, `Coral Species`,
    `Coral Present (Yes or No)`,
    `Year Discovered`, Size
  ) %>%
  arrange(Block, Treatment, `Coral ID`, Year)

# Preview / save
print(head(final_table, 20))
# write_csv(final_table, "C:/Users/brody/Desktop/Brody Thesis Project/Combined_Coral_Data_Table.csv")

```


```{r}
library(dplyr)

final_table_dedup_2 <- final_table %>%
  group_by(Year, Block, Treatment, `Coral ID`, Size) %>%
  slice_max(order_by = Size, n = 1, with_ties = FALSE) %>%  # keep the best one
  ungroup()
```



```{r}
dups <- final_table_dedup_2 %>%
  count(Year, Block, Treatment, `Coral ID`, Size) %>%
  filter(n > 1)
nrow(dups)

```



```{r}
# install.packages("writex1")  # run once
library(writexl)

out_path <- "C:/Users/brody/Desktop/Brody Thesis Project/final_table_dedup.xlsx"
write_xlsx(final_table_dedup, path = out_path)

```



```{r}
library(tidyverse)

totals_overall <- final_table %>%
  group_by(Year, Treatment) %>%
  summarise(total_size = sum(Size, na.rm = TRUE), .groups = "drop")

# View/save if needed
# write_csv(totals_overall, "totals_overall.csv")

ggplot(totals_overall, aes(Year, total_size, color = Treatment)) +
  geom_line() +
  geom_point() +
  labs(title = "Total Coral Size by Year and Treatment (All Blocks)",
       x = "Year", y = "Total Coral Size") +
  scale_x_continuous(breaks = sort(unique(totals_overall$Year))) +
  theme_minimal()

```


```{r}
Coral_Table <- read.csv("C:/Users/brody/Desktop/Brody Thesis Project/Coral Table.csv")
```


```{r}
library(tidyverse)

totals_overall_2 <- Coral_Table %>%
  group_by(Year, Treatment, Block) %>%
  summarise(total_size = sum(Size..cm.2., na.rm = TRUE),
            SE = sd(Size..cm.2., na.rm = TRUE), .groups = "drop")

# View/save if needed
# write_csv(totals_overall, "totals_overall.csv")

ggplot(totals_overall_2, aes(Year, total_size, color = Treatment)) +
  #geom_line() +
  geom_point() +
  labs(title = "Total Coral Size by Year and Treatment (All Blocks)",
       x = "Year", y = "Total Coral Size cm^2") +
  scale_x_continuous(breaks = sort(unique(totals_overall$Year))) +
  theme_minimal()

```







